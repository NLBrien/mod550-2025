Project delivery task 2 (9.10.2025)

Make a folder in your git MOD550-task2

This is going to be a big assignment but it is the last from my part. You have one month of time to work on it.

Inside the folder, put a Jupyter Notebook file  (.ipynb) for your Instances (cake) that you use to solve the task and one python file (.py) for your METHODS (recipes).

note from task 1 discussion: If you have a lot of data, please add the necessary only. You can have a single folder in your repo called data and you can access it from each task. (e.g. if your code sits in the folder MOD550-task2, you can access to your data naming the different folder such as: filename = "../data/a_lot_of_number.csv"). You wont need your data for now on task2, but you will need it later on.

    task 2.1: Make a DataModel class that reads the output of the DataAquisition class (from task1) in its __init__()

    task 2.2: Make a function in DataModel to make a linear regression. I suggest you try to do it on your own with only vanilla python and the class notes. If you are lost, you can find practical info here on how to use already made libraries: https://www.geeksforgeeks.org/machine-learning/regularization-in-machine-learning/

Links to an external site.  The issue here will be data structure: np.array vs list of list vs pandas DataFrames.

    task 2.3: Make a function that split the data you got from DataAquisition into train, validation and test. Do it  with vanilla python. You need to make sure you understand the data structure.

    task 2.4: Make a function that computes MSE (make your own, don't copy from my notes :P )

    task 2.5: Make a function to make NN. It would be essentially a wrapper of other libraries, I suggest to use Keras:  https://www.geeksforgeeks.org/machine-learning/how-to-create-models-in-keras/  . You should have acquired enough notions to handle this tool.

    task 2.6: Make a function that does K_MEAN and GMM (we will discuss them next week)

Once these methods (recipes) are done, you can now make cakes! :) :

    task 2.7: Make a linear regression on all your data (statistic ).

    task 2.8: Make a linear regression on all your train data and test it on your validation.

    task 2.9: Compute the MSE on your validation data. 

    task 2.10: Try for different distribution of initial data point, (a) Discuss how different functions can be used in the linear regression, and different NN architecture. (b) Discuss how you can use the validation data for the different cases. (c) Discuss the different outcome from the different models when using the full dataset to train and when you use a different ML approach. (d) Discuss the outcomes you get for K-means and GMM. (e) Discuss how you can integrate supervised and unsupervised methods for your case.

Comment:  All previous tasks are made to make you arrive to do 2.10. This point is the core of the course and it is what you need to learn in general when you work with ML and in particular if you want to pass the exam :P 

PREPARE FOR BUT NOT DUE YET:  task 3: apply all this to your dataset (this will be part of the final task) 

To submit, load on git your work and REPLY here with a comment: (e.g. 'Done)